{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["typesObj","types","i","routerUrl","Meta","Card","Cont","active","className","gutter","products","filter","item","type","includes","map","xs","sm","md","lg","hoverable","bordered","style","width","marginBottom","borderRadius","overflow","cover","alt","title","src","id","actions","GithubOutlined","DingdingOutlined","description","height","subtitle","textOverflow","display","App","useState","setActive","activeObj","introTitle","intro","Content","onClick","navIcon","navText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"20IAQIA,EAAW,G,cACDC,G,IAAd,2BAAqB,CAAC,IAAbC,EAAY,QACnBF,EAASE,EAAEC,WAAaD,G,kCAoDlBE,EAASC,IAATD,KAER,SAASE,EAAT,GAA2B,IAAXC,EAAU,EAAVA,OACd,OACE,yBAASC,UAAU,UAAnB,SACE,cAAC,IAAD,CAAKC,OAAQ,GAAb,SAEIC,EAASC,QAAO,SAAAC,GACd,MAAe,QAAXL,GACGK,EAAKC,KAAKC,SAASP,MACzBQ,KAAI,SAACH,GACN,OACE,cAAC,IAAD,CAAKI,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAhC,SACE,cAAC,IAAD,CACEC,WAAS,EACTC,UAAU,EACVC,MAAO,CAAEC,MAAO,OAAQC,aAAc,GAAIC,aAAc,EAAGC,SAAU,UACrEC,MACE,qBACEnB,UAAU,UACVoB,IAAKhB,EAAKiB,MACVC,IAAG,gBAAWlB,EAAKmB,GAAK,GAAK,EAA1B,UAGPC,QAAS,CACP,cAACC,EAAA,EAAD,GAAoB,WACpB,cAACC,EAAA,EAAD,GAAsB,SAb1B,SAgBE,cAAC9B,EAAD,CAEEyB,MAAOjB,EAAKiB,MACZM,YACE,sBAAKb,MAAO,CAAEc,OAAQ,QAAtB,UACE,6BAAKxB,EAAKyB,WACV,qBAAKf,MAAO,CACVI,SAAU,SACVY,aAAc,WACdC,QAAS,cACT,qBAAsB,EACtB,qBAAsB,YALxB,SAMI3B,EAAKuB,sBA7BqBvB,EAAKmB,WA2C5CS,MAxGf,WAAgB,IAAD,EACeC,oBAAS,iBAAM,SAD9B,mBACNlC,EADM,KACEmC,EADF,KAEPC,EAAS,eAAQ3C,EAASO,IAChC,OACE,eAAC,IAAD,CAAQC,UAAU,OAAlB,UACE,yBAAQA,UAAU,SAAlB,UACE,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,uBACf,qBAAKA,UAAU,oBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,mBACf,qBAAKA,UAAU,6BAGnB,yBAASA,UAAU,UAAnB,SACE,gCACE,6BAAKmC,EAAUC,aACf,4BAAID,EAAUE,gBAIpB,eAAC,IAAOC,QAAR,CAAgBtC,UAAU,OAA1B,UACE,qBAAKA,UAAU,QAAf,SACE,cAAC,IAAD,UAEIP,EAAMc,KAAI,SAACH,GACT,OACE,cAAC,IAAD,CAAKI,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAxB,SACE,qBAAKV,UAAU,UAAf,SACE,oBAAGuC,QAAS,kBAAML,EAAU9B,EAAKT,YAAYK,UAAWD,IAAWK,EAAKT,UAAY,SAAW,GAA/F,UACE,mBAAGK,UAAS,kBAAaI,EAAKoC,WAC9B,sBAAMxC,UAAU,UAAhB,SAA2BI,EAAKqC,UAChC,qBAAKzC,UAAU,iBALWI,EAAKT,kBAc/C,cAACG,EAAD,CAAMC,OAAQA,WC5CP2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a971ffa3.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { Layout, Row, Col, Card, Avatar } from 'antd';\nimport { GithubOutlined, EllipsisOutlined, DingdingOutlined } from '@ant-design/icons';\nimport types from './types.json';\nimport products from './products.json';\n\nimport './App.less';\n\nlet typesObj = {};\nfor (let i of types) {\n  typesObj[i.routerUrl] = i;\n}\n\nfunction App() {\n  const [active, setActive] = useState(() => 'all');\n  const activeObj = { ...typesObj[active] };\n  return (\n    <Layout className=\"main\">\n      <header className=\"header\">\n        <div className=\"wrap\">\n          <div className=\"child\">\n            <div className=\"svg_block image1\" />\n            <div className=\"svg_diamond image2\" />\n            <div className=\"svg_leaf image3\" />\n            <div className=\"svg_small_circle\" />\n            <div className=\"svg_big_circle\" />\n            <div className=\"svg_triangle image4\" />\n          </div>\n        </div>\n        <article className=\"message\">\n          <div>\n            <h3>{activeObj.introTitle}</h3>\n            <p>{activeObj.intro}</p>\n          </div>\n        </article>\n      </header>\n      <Layout.Content className=\"body\">\n        <div className=\"items\">\n          <Row >\n            {\n              types.map((item) => {\n                return (\n                  <Col xs={12} sm={6} md={3} key={item.routerUrl}>\n                    <div className=\"navitem\">\n                      <a onClick={() => setActive(item.routerUrl)} className={active === item.routerUrl ? 'active' : ''}>\n                        <i className={`navicon ${item.navIcon}`} />\n                        <span className=\"navtext\">{item.navText}</span>\n                        <div className=\"navbot\" />\n                      </a>\n                    </div>\n                  </Col>\n                );\n              })\n            }\n          </Row>\n        </div>\n        <Cont active={active} />\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nconst { Meta } = Card;\n\nfunction Cont({ active }) {\n  return (\n    <section className=\"content\">\n      <Row gutter={24}>\n        {\n          products.filter(item => {\n            if (active === 'all') return true;\n            return item.type.includes(active);\n          }).map((item) => {\n            return (\n              <Col xs={24} sm={12} md={8} lg={6} key={item.id}>\n                <Card\n                  hoverable\n                  bordered={false}\n                  style={{ width: '100%', marginBottom: 24, borderRadius: 2, overflow: 'hidden' }}\n                  cover={\n                    <img\n                      className=\"itemImg\"\n                      alt={item.title}\n                      src={`./img/${item.id % 10 + 1}.jpg`}\n                    />\n                  }\n                  actions={[\n                    <GithubOutlined key=\"setting\" />,\n                    <DingdingOutlined key=\"edit\" />,\n                  ]}\n                >\n                  <Meta\n                    // avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n                    title={item.title}\n                    description={(\n                      <div style={{ height: '85px' }}>\n                        <h5>{item.subtitle}</h5>\n                        <div style={{\n                          overflow: 'hidden',\n                          textOverflow: 'ellipsis',\n                          display: '-webkit-box',\n                          '-webkit-line-clamp': 3,\n                          '-webkit-box-orient': 'vertical'\n                        }}>{item.description}</div>\n                      </div>\n                    )}\n                  />\n                </Card>\n              </Col>\n            )\n          })\n        }\n      </Row>\n    </section>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}